defaults: &defaults
  docker:
    - image: buildpack-deps:xenial
      environment:
        LANG: C.UTF-8
        EMTEST_DETECT_TEMPFILE_LEAKS: 1

test-defaults: &test-defaults
  <<: *defaults
  working_directory: ~/
  steps:
    - checkout:
        path: emscripten/
    - attach_workspace:
        # Must be absolute path or relative path from working_directory
        at: ~/
    - run:
        name: install package dependencies
        command: |
          apt-get update -q
          # openjdk-9 is also available, but hits #7232
          apt-get install -q -y python3 cmake build-essential openjdk-8-jre-headless
    - run:
        name: run tests
        command: |
          EMCC_CORES=4 python3 emscripten/tests/runner.py $TEST_TARGET

version: 2
jobs:
  build:
    <<: *defaults
    working_directory: ~/
    steps:
      - checkout:
          path: emscripten/
      - run:
          name: install package dependencies
          command: |
            apt-get update -q
            apt-get install -q -y python3 cmake
      - run:
          name: install emsdk
          command: |
            wget https://github.com/juj/emsdk/archive/master.tar.gz
            tar -xf master.tar.gz
            cd emsdk-master
            ./emsdk --notty update-tags
            ./emsdk --notty install latest
            ./emsdk --notty activate latest
            cd -
            # Remove the emsdk version of emscripten save space in the
            # persistent workspace and to avoid any confusion with that version
            # we are trying to test.
            rm -r ~/emsdk-master/emscripten/
            echo BINARYEN_ROOT="''" >> ~/.emscripten
      - run:
          name: embuilder build ALL
          command: |
            EMCC_CORES=4 python3 ~/emscripten/embuilder.py build ALL
            python3 ~/emscripten/tests/runner.py test_hello_world
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/
          # Must be relative path from root
          paths:
            - emsdk-master/
            - .emscripten_cache/
            - .emscripten_ports/
            - .emscripten
  build-docs:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install pip
          command: |
            apt-get update -q
            apt-get install -q -y python-pip
      - run:
          name: install sphinx
          command: |
            pip install sphinx==1.7.8
      - run: make -C site html
  flake8:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install pip
          command: |
            apt-get update -q
            apt-get install -q -y python-pip
      - run: pip install flake8==3.4.1
      - run: flake8
  test-other:
    <<: *test-defaults
    environment:
      - TEST_TARGET=other skip:other.test_native_link_error_message skip:other.test_emcc_v skip:other.test_llvm_lit
      # some native-dependent tests fail because of the lack of native headers on emsdk-bundled clang
      # CircleCI actively kills memory-over-consuming process
      # skip llvm-lit tests which need lit, and pip to get lit, but pip has broken on CI
  test-browser-chrome:
    <<: *defaults
    environment:
      - EMTEST_LACKS_SOUND_HARDWARE=1
      - EMTEST_DETECT_TEMPFILE_LEAKS=0
    working_directory: ~/
    steps:
      - checkout:
          path: emscripten/
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/
      - run:
          name: install package dependencies
          command: |
            apt-get update -q
            # install chromium-browser in order to ensure we have most of the
            # dependecies for chrome.
            EXTRA_CHROME_DEPS="lsb-release fonts-liberation libappindicator3-1"
            apt-get install -q -y unzip xvfb chromium-browser openjdk-8-jre-headless $EXTRA_CHROME_DEPS
      - run:
          name: download chrome
          command: |
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            dpkg -i google-chrome-stable_current_amd64.deb
      - run:
          name: run tests
          command: |
            # --no-sandbox becasue we are running as root and chrome requires
            # this flag for now: https://crbug.com/638180
            CHROME_FLAGS_BASE="--no-first-run -start-maximized --no-sandbox --use-gl=swiftshader"
            CHROME_FLAGS_WASM="--enable-features=WebAssembly --enable-features=SharedArrayBuffer --disable-features=WebAssemblyTrapHandler --js-flags=\"--experimental-wasm-threads --harmony-sharedarraybuffer --no-wasm-disable-structured-cloning\""
            export EMTEST_BROWSER="xvfb-run /usr/bin/google-chrome-stable $CHROME_FLAGS_BASE $CHROME_FLAGS_WASM"
            export EMTEST_LACKS_GRAPHICS_HARDWARE=1
            export EMCC_CORES=4
            ./emscripten/tests/runner.py browser

workflows:
  version: 2

  build-test:
    jobs:
      - flake8
      - build-docs
      - build
      - test-browser-chrome:
          requires:
            - build

